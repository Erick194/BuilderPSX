common
{
  // Some common settings
  include("Common.cfg");

  // Default testing parameters
  testparameters = "-datadir \"%DD\" -skill \"%S\" -warp %L1%L2 %NM";
  testshortpaths = true;

  // Default nodebuilder configurations
  defaultsavecompiler = "PSXBSP_normal";
  defaulttestcompiler = "PSXBSP_normal";

  // Texture loading options
  mixtexturesflats = false;
  defaulttexturescale = 1.0f;
  defaultflatscale = 1.0f;
  scaledtextureoffsets = true;

  //mxd. Do vanilla-style thing rotation angle clamping
  doomthingrotationangles = true;
  doomlightlevels = false;

  // Texture sources
  textures
  {
    include("Doom_misc.cfg", "textures");
  }

  // Patch sources
  patches
  {
    include("Doom_misc.cfg", "patches");
  }

  // Sprite sources
  sprites
  {
    include("Doom_misc.cfg", "sprites");
  }

  // Flat sources
  flats
  {
    include("Doom_misc.cfg", "flats");
  }
}

mapformat_psxdoom
{
  // The format interface handles the map data format
  formatinterface = "PSXDoomMapSetIO";

  maplumpnames
  {
    ~MAP
	{
		required = true;
		blindcopy = true;
		nodebuild = false;
	}
	
	THINGS
	{
		required = true;
		nodebuild = true;
		allowempty = true;
	}
	
	LINEDEFS
	{
		required = true;
		nodebuild = true;
		allowempty = false;
	}
	
	SIDEDEFS
	{
		required = true;
		nodebuild = true;
		allowempty = false;
	}
	
	VERTEXES
	{
		required = true;
		nodebuild = true;
		allowempty = false;
	}
	
	SEGS
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}
	
	SSECTORS
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}
	
	NODES
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}
	
	SECTORS
	{
		required = true;
		nodebuild = true;
		allowempty = false;
	}
	
	REJECT
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}
	
	BLOCKMAP
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}

	LEAFS
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}

	ENDOFWAD
	{
		required = true;
		nodebuild = true;
		allowempty = false;
	}
  }

  // When this is set to true, sectors with the same tag will light up when a line is highlighted
  linetagindicatesectors = true;

// Special linedefs
  include("ZDoom_misc.cfg", "speciallinedefs_doomhexen");


  // Default flags for first new thing
  defaultthingflags
  {
    include("Doom_misc.cfg", "defaultthingflags");
  }

  // Door making
  include("ZDoom_misc.cfg", "doormaking_doom");

  // Generalized actions
  generalizedlinedefs = false;
  generalizedsectors = false;
  
  // DEFAULT SECTOR BRIGHTNESS LEVELS
  sectorbrightness
  {
    include("Doom_misc.cfg", "sectorbrightness");
  }

  // SECTOR TYPES
  sectortypes
  {
    //include("Doom_sectors.cfg");
	0 = "Normal";
	1 = "Light Blinks (randomly)";
	2 = "Light Blinks (2 Hz)";
	3 = "Light Blinks (1 Hz)";
	4 = "Damage -10 or 20% health";
	5 = "Damage -5 or 10% health";
	7 = "Damage -2 or 5% health";
	8 = "Light Glow (MinSurroundingLight)";
	9 = "Secret";
	10 = "Door Close Stay (after 30 sec)";
	//11 = "Damage -10 or 20% health and End level";
	12 = "Light Blinks (1 Hz synchronized)";
	13 = "Light Blinks (2 Hz synchronized)";
	14 = "Door Open Close (opens after 5 min)";
	16 = "Damage -10 or 20% health";
	17 = "Light Flickers (randomly)";
	200 = "Light Glow (To Light 10)";
	201 = "Light Glow (To Light 255)";
	202 = "Strobe Flash Fast (1,1)";
	204 = "Strobe Flash (4,3)";
  }

  // LINEDEF FLAGS
  linedefflags
  {
    1 = "Impassable";
    2 = "Block Monster";
    4 = "Double Sided";
    8 = "Upper Unpegged";
    16 = "Lower Unpegged";
    32 = "Secret";
    64 = "Block Sound";
    128 = "Hidden";
    256 = "Shown";
    512 = "Render Mid-Texture";
    1024 = "Mid-Texture Translucent (0.5)";
    2048 = "Block Projectiles";
    4096 = "Clip Mid-Texture (FinalDoom Only)";
    8192 = "Link Scroll (FindSide Only)";
  }

  // LINEDEF ACTIVATIONS
  linedefactivations
  {
  }

// Linedef flags UDMF translation table
	// This is needed for copy/paste and prefabs to work properly
	// When the UDMF field name is prefixed with ! it is inverted
	linedefflagstranslation
	{
		1 = "blocking";
		2 = "blockmonsters";
		4 = "twosided";
		8 = "dontpegtop";
		16 = "dontpegbottom";
		32 = "secret";
		64 = "blocksound";
		128 = "dontdraw";
		256 = "mapped";
		512 = "!render mid-texture";
    		1024 = "!mid-texture translucent (0.5)";
    		2048 = "!block projectiles";
    		4096 = "!clip mid-texture (finaldoom only)";
		8192 = "!link scroll (findside only)";
	}


  // LINEDEF TYPES
  linedeftypes
  {
    include("PSXDoom_linedefs.cfg");
  }

  // THING FLAGS
  thingflags
  {
    1 = "Easy";
    2 = "Medium";
    4 = "Hard";
    8 = "Deaf";
    16 = "Multiplayer";
    32 = "BlendMask1";
    64 = "BlendMask2";
    128 = "BlendMask3";
  }

// Thing flags UDMF translation table
	// This is needed for copy/paste and prefabs to work properly
	// When the UDMF field name is prefixed with ! it is inverted
	thingflagstranslation
	{
		1 = "skill1,skill2";
		2 = "skill3";
		4 = "skill4,skill5";
		8 = "ambush";
		16 = "!single";
		32 = "!blendmask1";
		64 = "!blendmask2";
		128 = "!blendmask3";
	}

  // How to compare thing flags (for the stuck things error checker)
  thingflagscompare
  {
    include("Doom_misc.cfg", "thingflagscompare");
  }

  // Things flags masks
  include("Doom_misc.cfg", "thingflagsmasks");

  sectorflags
  {
    1 = "Reverb Off";
  }
}